generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String         @unique
  password      String
  image         String?
  role          Role           @default(USER)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  events        Event[]
  registrations Registration[]
}

model Event {
  id            String         @id @default(cuid())
  title         String
  description   String
  content       String?
  location      String
  startDate     DateTime
  endDate       DateTime
  imageUrl      String?
  maxAttendees  Int?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  createdBy     String
  published     Boolean        @default(false)
  author        User           @relation(fields: [createdBy], references: [id])
  gallery       EventImage[]
  registrations Registration[]
}

model Registration {
  id        String             @id @default(cuid())
  eventId   String
  userId    String
  status    RegistrationStatus @default(PENDING)
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  event     Event              @relation(fields: [eventId], references: [id], onDelete: Cascade)
  user      User               @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([eventId, userId])
}

model EventImage {
  id        String   @id @default(cuid())
  eventId   String
  imageUrl  String
  caption   String?
  createdAt DateTime @default(now())
  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
}

model ContactSubmission {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String
  message   String
  createdAt DateTime @default(now())
  responded Boolean  @default(false)
}

enum Role {
  USER
  ADMIN
}

enum RegistrationStatus {
  PENDING
  CONFIRMED
  CANCELLED
}
